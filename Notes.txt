service is a class which we add to our angular application which let inject by angular into component and which able to centralize some tasks which provides easy access to data from within different component without property binding

mongo db connection url

mongo "mongodb+srv://cluster0.fscz4.mongodb.net/meancoursedb" --username meancourse
Password:-
use meancoursedb

SAP Authentication
SAP backend (=>APIs) are stateless and decoupled from front end 2servers
we can do Authentication by json web token generated on server hashed on successful login and send back to frontend where we can store it in angular app cookie/localstorage
that token is attached to future requests as part of url or header, that token cann't be faked only server can decode it.

104:- depending on the token we need to protect few routes
in posts routes add/edit/delete needs to be protected

to proetect the route we will use an extra middleware to autheticate the request

110:- we will route guards to avoid user to got to any particular page via url as he/she is not authenticated to use the page

111:- token expires in 1h that fronent doen't know, we have to inform frontend the same thing

114:- only the user who created the post can edit/delete, connecting users and posts
either we can user list of posts in user object or (user object in our post object) easy to implement

122:- Error handling:- simple thing is to add a handler in observable which is reponsible for sending erroneous request.

123:- Error message by using error interceptor //like auth-interceptor===> error-interceptor.ts
        we can listen to the reponse I don't want to edit the request, want to listen to the response
        handle gives us back the response observable stream and we can just hook into the stream and listen the events
        useing pipe provided by rxjs to add an operator to the stream and catchError() provided by rxjs

        we are adding something to the observable stream, handling it in the diff places of our app
        return an observable inside of the catchError even if we have an error , can use throwError(), will generate a new observable to which we can pass error

124:- error component is going to generate dynamically we need to tell angular and attached in ngModule by fifth property called entryComponents 
        angular now know that this component is going to get used even though angular cannot see it.

127:- if for some reason error ocurred on new post page then I want to also not show the spineer any more